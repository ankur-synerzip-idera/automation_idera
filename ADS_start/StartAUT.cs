///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ADS_start
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The StartAUT recording.
    /// </summary>
    [TestModule("643aa726-43e0-4e02-b3fa-98676bd1f0f3", ModuleType.Recording, 1)]
    public partial class StartAUT : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ADS_startRepository repository.
        /// </summary>
        public static ADS_startRepository repo = ADS_startRepository.Instance;

        static StartAUT instance = new StartAUT();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public StartAUT()
        {
            StartAutProcessIDVar_FilePath = "";
            Evaluation_Text = "";
            ADS_Title = "";
            varLicense_Title = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static StartAUT Instance
        {
            get { return instance; }
        }

#region Variables

        string _StartAutProcessIDVar_FilePath;

        /// <summary>
        /// Gets or sets the value of variable StartAutProcessIDVar_FilePath.
        /// </summary>
        [TestVariable("5cbde57f-824c-44a9-bdac-7d6715c3dffa")]
        public string StartAutProcessIDVar_FilePath
        {
            get { return _StartAutProcessIDVar_FilePath; }
            set { _StartAutProcessIDVar_FilePath = value; }
        }

        string _Evaluation_Text;

        /// <summary>
        /// Gets or sets the value of variable Evaluation_Text.
        /// </summary>
        [TestVariable("7324bebf-2da1-423a-8e76-16cf20814437")]
        public string Evaluation_Text
        {
            get { return _Evaluation_Text; }
            set { _Evaluation_Text = value; }
        }

        string _ADS_Title;

        /// <summary>
        /// Gets or sets the value of variable ADS_Title.
        /// </summary>
        [TestVariable("3cf8d129-2490-427b-b462-3e151893cc9a")]
        public string ADS_Title
        {
            get { return _ADS_Title; }
            set { _ADS_Title = value; }
        }

        string _varLicense_Title;

        /// <summary>
        /// Gets or sets the value of variable varLicense_Title.
        /// </summary>
        [TestVariable("219afb1b-5b72-4ecd-b8bf-f32e9f542859")]
        public string varLicense_Title
        {
            get { return _varLicense_Title; }
            set { _varLicense_Title = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\Program Files\\Aqua Data Studio 20.0 - 64bit\\datastudio.exe' in normal mode.", new RecordItemIndex(0));
            StartAutProcessIDVar_FilePath = ValueConverter.ToString(Host.Local.RunApplication("C:\\Program Files\\Aqua Data Studio 20.0 - 64bit\\datastudio.exe", "", StartAutProcessIDVar_FilePath, false));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LicenseForAquaDataStudio.LicenseForAquaDataStudio' at Center.", repo.LicenseForAquaDataStudio.LicenseForAquaDataStudioInfo, new RecordItemIndex(1));
            repo.LicenseForAquaDataStudio.LicenseForAquaDataStudio.Click();
            Delay.Milliseconds(0);
            
            // Evaluation Section
            Report.Log(ReportLevel.Info, "Section", "Evaluation Section", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LicenseForAquaDataStudio.LicenseForAquaDataStudio' at Center.", repo.LicenseForAquaDataStudio.LicenseForAquaDataStudioInfo, new RecordItemIndex(3));
            repo.LicenseForAquaDataStudio.LicenseForAquaDataStudio.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varLicense_Title) on item 'LicenseForAquaDataStudio.LicenseForAquaDataStudio'.", repo.LicenseForAquaDataStudio.LicenseForAquaDataStudioInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.LicenseForAquaDataStudio.LicenseForAquaDataStudioInfo, "Text", varLicense_Title);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LicenseForAquaDataStudio.EvaluationIWouldLikeToRequestA1' at Center.", repo.LicenseForAquaDataStudio.EvaluationIWouldLikeToRequestA1Info, new RecordItemIndex(5));
            repo.LicenseForAquaDataStudio.EvaluationIWouldLikeToRequestA1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'LicenseForAquaDataStudio.EvaluationIWouldLikeToRequestA1'.", repo.LicenseForAquaDataStudio.EvaluationIWouldLikeToRequestA1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.LicenseForAquaDataStudio.EvaluationIWouldLikeToRequestA1Info, "Checked", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Evaluation_Text) on item 'LicenseForAquaDataStudio.EvaluationIWouldLikeToRequestA1'.", repo.LicenseForAquaDataStudio.EvaluationIWouldLikeToRequestA1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.LicenseForAquaDataStudio.EvaluationIWouldLikeToRequestA1Info, "Text", Evaluation_Text);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'LicenseForAquaDataStudio.LicenseForAquaDataStudio' at Center.", repo.LicenseForAquaDataStudio.LicenseForAquaDataStudioInfo, new RecordItemIndex(8));
            repo.LicenseForAquaDataStudio.LicenseForAquaDataStudio.MoveTo();
            Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'LicenseForAquaDataStudio.LicenseForAquaDataStudio' at Center.", repo.LicenseForAquaDataStudio.LicenseForAquaDataStudioInfo, new RecordItemIndex(9));
            repo.LicenseForAquaDataStudio.LicenseForAquaDataStudio.MoveTo();
            Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LicenseForAquaDataStudio.Evaluate' at Center.", repo.LicenseForAquaDataStudio.EvaluateInfo, new RecordItemIndex(10));
            //repo.LicenseForAquaDataStudio.Evaluate.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'LicenseForAquaDataStudio.LicenseForAquaDataStudio' at 700;21.", repo.LicenseForAquaDataStudio.LicenseForAquaDataStudioInfo, new RecordItemIndex(11));
            //repo.LicenseForAquaDataStudio.LicenseForAquaDataStudio.MoveTo("700;21");
            //Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'LicenseForAquaDataStudio.LicenseForAquaDataStudio' at 530;-70.", repo.LicenseForAquaDataStudio.LicenseForAquaDataStudioInfo, new RecordItemIndex(12));
            //repo.LicenseForAquaDataStudio.LicenseForAquaDataStudio.MoveTo("530;-70");
            //Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LicenseForAquaDataStudio.Evaluate' at 47;12.", repo.LicenseForAquaDataStudio.EvaluateInfo, new RecordItemIndex(13));
            repo.LicenseForAquaDataStudio.Evaluate.Click("47;12");
            Delay.Milliseconds(0);
            
            // Main screen validation
            Report.Log(ReportLevel.Info, "Section", "Main screen validation", new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$ADS_Title) on item 'AquaDataStudioEvaluation.AquaDataStudioEvaluation'.", repo.AquaDataStudioEvaluation.AquaDataStudioEvaluationInfo, new RecordItemIndex(15));
            Validate.AttributeContains(repo.AquaDataStudioEvaluation.AquaDataStudioEvaluationInfo, "Text", ADS_Title);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Success, "User", "Application launced successfully", new RecordItemIndex(16));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
