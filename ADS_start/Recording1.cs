///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ADS_start
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("aa4167d9-202b-4df9-bbd8-9a4031fcf3cf", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ADS_startRepository repository.
        /// </summary>
        public static ADS_startRepository repo = ADS_startRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'Datastudio.SqlServerNew' at 55;3.", repo.Datastudio.SqlServerNewInfo, new RecordItemIndex(0));
            repo.Datastudio.SqlServerNew.Click(System.Windows.Forms.MouseButtons.Right, "55;3");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Datastudio.QueryAnalyzerEle' at 70;7.", repo.Datastudio.QueryAnalyzerEleInfo, new RecordItemIndex(1));
            repo.Datastudio.QueryAnalyzerEle.Click("70;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AquaDataStudioEvaluation.SqlServerNew' at 46;1.", repo.AquaDataStudioEvaluation.SqlServerNewInfo, new RecordItemIndex(2));
            repo.AquaDataStudioEvaluation.SqlServerNew.Click("46;1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AquaDataStudioEvaluation.ServerMenuEle' at 22;14.", repo.AquaDataStudioEvaluation.ServerMenuEleInfo, new RecordItemIndex(3));
            repo.AquaDataStudioEvaluation.ServerMenuEle.Click("22;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Datastudio.QueryAnalyzerEle' at 89;5.", repo.Datastudio.QueryAnalyzerEleInfo, new RecordItemIndex(4));
            repo.Datastudio.QueryAnalyzerEle.Click("89;5");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AquaDataStudioEvaluation.DbSchemaNameEle' at 71;7.", repo.AquaDataStudioEvaluation.DbSchemaNameEleInfo, new RecordItemIndex(5));
            repo.AquaDataStudioEvaluation.DbSchemaNameEle.Click("71;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AquaDataStudioEvaluation.DbSchemaNameEle' at 4;4.", repo.AquaDataStudioEvaluation.DbSchemaNameEleInfo, new RecordItemIndex(6));
            repo.AquaDataStudioEvaluation.DbSchemaNameEle.Click(new Location(DbSchemaNameEle_Screenshot1, "4;4", DbSchemaNameEle_Screenshot1_Options));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AquaDataStudioEvaluation.TestabAtSqlServerNewUntitled31' at 41;10.", repo.AquaDataStudioEvaluation.TestabAtSqlServerNewUntitled31Info, new RecordItemIndex(7));
            repo.AquaDataStudioEvaluation.TestabAtSqlServerNewUntitled31.Click("41;10");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        CompressedImage DbSchemaNameEle_Screenshot1
        { get { return repo.AquaDataStudioEvaluation.DbSchemaNameEleInfo.GetScreenshot1(new Rectangle(43, 2, 8, 8)); } }

        Imaging.FindOptions DbSchemaNameEle_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
